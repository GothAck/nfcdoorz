<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>NFC Doorz: Member List</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">NFC Doorz
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('structnfcdoorz_1_1ipc_1_1_ipc_client_a_p_i.htm','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">nfcdoorz::ipc::IpcClientAPI Member List</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="structnfcdoorz_1_1ipc_1_1_ipc_client_a_p_i.htm">nfcdoorz::ipc::IpcClientAPI</a>, including all inherited members.</p>
<table class="directory">
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>_fd</b> (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client_base.htm">nfcdoorz::ipc::IpcClientBase</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client_base.htm">nfcdoorz::ipc::IpcClientBase</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>_next_id</b> (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client_base.htm">nfcdoorz::ipc::IpcClientBase</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client_base.htm">nfcdoorz::ipc::IpcClientBase</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>_thread</b> (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client_base.htm">nfcdoorz::ipc::IpcClientBase</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client_base.htm">nfcdoorz::ipc::IpcClientBase</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>APICall</b> typedef (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>APICallsEnum</b> typedef (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>APICallT</b> typedef (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>APIEventsEnum</b> typedef (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>APIEventsUnion</b> typedef (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>APIRepliesEnum</b> typedef (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>APIReply</b> typedef (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>APIReplyT</b> typedef (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>async</b> (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client_base.htm">nfcdoorz::ipc::IpcClientBase</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client_base.htm">nfcdoorz::ipc::IpcClientBase</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>call_mutex</b> (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>call_returns</b> (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>calls_out_queue</b> (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>connect</b>(std::string base64_socket_addr) (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client_base.htm">nfcdoorz::ipc::IpcClientBase</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client_base.htm">nfcdoorz::ipc::IpcClientBase</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>event_callbacks</b> (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>EventCallback</b> typedef (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>getCall</b>() (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>getCreateAuthenticatorCall</b>(std::string ttyName, std::string deviceID) (defined in <a class="el" href="structnfcdoorz_1_1ipc_1_1_ipc_client_a_p_i.htm">nfcdoorz::ipc::IpcClientAPI</a>)</td><td class="entry"><a class="el" href="structnfcdoorz_1_1ipc_1_1_ipc_client_a_p_i.htm">nfcdoorz::ipc::IpcClientAPI</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>getDestroyAuthenticatorCall</b>() (defined in <a class="el" href="structnfcdoorz_1_1ipc_1_1_ipc_client_a_p_i.htm">nfcdoorz::ipc::IpcClientAPI</a>)</td><td class="entry"><a class="el" href="structnfcdoorz_1_1ipc_1_1_ipc_client_a_p_i.htm">nfcdoorz::ipc::IpcClientAPI</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>getNextID</b>() (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client_base.htm">nfcdoorz::ipc::IpcClientBase</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client_base.htm">nfcdoorz::ipc::IpcClientBase</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>getStatusCall</b>() (defined in <a class="el" href="structnfcdoorz_1_1ipc_1_1_ipc_client_a_p_i.htm">nfcdoorz::ipc::IpcClientAPI</a>)</td><td class="entry"><a class="el" href="structnfcdoorz_1_1ipc_1_1_ipc_client_a_p_i.htm">nfcdoorz::ipc::IpcClientAPI</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>idle</b> (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>idle</b> (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>idle_calls</b> (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>idle_calls</b> (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>IpcBase</b>() (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>IpcBase</b>() (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>IpcClientBase</b>() (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client_base.htm">nfcdoorz::ipc::IpcClientBase</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client_base.htm">nfcdoorz::ipc::IpcClientBase</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>loop</b> (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>loop</b> (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>makeCall</b>(APICallT call, std::optional&lt; std::shared_ptr&lt; uvw::PipeHandle &gt;&gt; pipe) (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>nextId</b> (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>nextId</b> (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>onAsyncEvent</b>(std::shared_ptr&lt; uvw::PipeHandle &gt; pipe) override (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>onDataEvent</b>(const uvw::DataEvent &amp;ev, uvw::PipeHandle &amp;sock) override (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm#a0ab232960400fefb1bcfa9c72a285329">nfcdoorz::open</a>(int fd)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm#a0ab232960400fefb1bcfa9c72a285329">nfcdoorz::ipc::IpcBase::open</a>(int fd)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>pipe</b> (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>pipe</b> (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>registerEventHandler</b>(APIEventsEnum event_type, EventCallback cb) (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client.htm">nfcdoorz::ipc::IpcClient&lt; ipc::api::Server &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>registerIdleCall</b>(std::shared_ptr&lt; Executable &gt; exec) (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>registerIdleCall</b>(std::shared_ptr&lt; Executable &gt; exec) (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm#acaed0b79cc0ea79052a21b583b79bfb6">nfcdoorz::run</a>()</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm#acaed0b79cc0ea79052a21b583b79bfb6">nfcdoorz::ipc::IpcBase::run</a>()</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>runThread</b>() (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client_base.htm">nfcdoorz::ipc::IpcClientBase</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client_base.htm">nfcdoorz::ipc::IpcClientBase</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>setFd</b>(int fd) (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client_base.htm">nfcdoorz::ipc::IpcClientBase</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_client_base.htm">nfcdoorz::ipc::IpcClientBase</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>socketpair</b>() (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>socketpair</b>() (defined in <a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a>)</td><td class="entry"><a class="el" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm">nfcdoorz::ipc::IpcBase</a></td><td class="entry"></td></tr>
</table></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
