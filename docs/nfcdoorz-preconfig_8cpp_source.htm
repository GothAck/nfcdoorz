<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>NFC Doorz: apps/nfcdoorz-preconfig.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">NFC Doorz
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('nfcdoorz-preconfig_8cpp_source.htm','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">nfcdoorz-preconfig.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;iomanip&gt;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;err.h&gt;</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;errno.h&gt;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;stdlib.h&gt;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;string.h&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;unistd.h&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;docopt/docopt.h&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;yaml-cpp/yaml.h&gt;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;nfc/nfc.h&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;freefare.h&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &quot;lib/types.hpp&quot;</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &quot;lib/logging.hpp&quot;</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &quot;lib/config.hpp&quot;</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &quot;lib/signals.h&quot;</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &quot;lib/nfc.hpp&quot;</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#include &quot;lib/adapter.hpp&quot;</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacestd.htm">std</a>;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacenfcdoorz.htm">nfcdoorz</a>;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> USAGE[] =</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  R<span class="stringliteral">&quot;(NFC-Doorz card pre-configuration</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="stringliteral">      Usage:</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="stringliteral">        preconfig [-v | -vv | -vvv] [options] &lt;reader&gt;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="stringliteral">        preconfig (-h | --help)</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="stringliteral">        preconfig --version</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="stringliteral">      Options:</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="stringliteral">        -h --help               Show this help</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="stringliteral">        --version               Show version</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="stringliteral">        --config=CONFIG         Use config file [default: ./config.yaml]</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="stringliteral">        -v --verbose            Verbose output</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="stringliteral">        -n --dry-run            Disable writing to tag</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="stringliteral">        --uid=UID               Override tag uid</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="stringliteral">        --current-picc-key=KEY  Current PICC key</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="stringliteral">        --skip-picc-rekey       Skip rekey of PICC (already keyed)</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="stringliteral">        --delete-app=AID        Delete AID app from card</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="stringliteral">        --skip-app-creation     Skip app creation (already exists)</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="stringliteral">        --skip-app-rekey        Skip app rekey from default null key</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="stringliteral">        --delete-app-creation   Delete app before creation (already exists)</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="stringliteral">        --print-config          Print loaded config for debugging purposes</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="stringliteral">        &lt;reader&gt;                Configure card presented to this reader</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="stringliteral">  )&quot;;</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="stringliteral">uint8_t salt[SALT_SIZE] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="stringliteral"></span><span class="preprocessor">#define CHECK_BOOL(call, err_str) if (!call) { errx(9, err_str); }</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<a class="code" href="structnfcdoorz_1_1nfc_1_1_key_d_e_s.htm">nfc::KeyDES</a> null_key_des;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<a class="code" href="structnfcdoorz_1_1nfc_1_1_key_a_e_s.htm">nfc::KeyAES</a> null_key_aes;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keywordtype">int</span> main(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> *argv[]) {</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="keywordtype">int</span> error = EXIT_SUCCESS;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  map&lt;string, docopt::value&gt; args = docopt::docopt(</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    USAGE,</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    { argv + 1, argv + argc },</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keyword">true</span>,</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="stringliteral">&quot;NFC-Doorz preconfig v0.0.1&quot;</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    );</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  logging::init(args);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  <span class="keyword">struct </span>{</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    optional&lt;string&gt; overridden_uid;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    optional&lt;string&gt; delete_apps;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    optional&lt;string&gt; overridden_picc_key;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordtype">bool</span> dry_run;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordtype">bool</span> print_config;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keywordtype">bool</span> skip_picc_rekey;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keywordtype">bool</span> skip_app_rekey;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordtype">bool</span> delete_app_creation;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordtype">bool</span> skip_app_creation;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  } options = {</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    args[<span class="stringliteral">&quot;--uid&quot;</span>]</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    ? make_optional(args[<span class="stringliteral">&quot;--uid&quot;</span>].asString())</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    : nullopt,</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    args[<span class="stringliteral">&quot;--delete-app&quot;</span>]</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    ? make_optional(args[<span class="stringliteral">&quot;--delete-app&quot;</span>].asString())</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    : nullopt,</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    args[<span class="stringliteral">&quot;--current-picc-key&quot;</span>]</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    ? make_optional(args[<span class="stringliteral">&quot;--current-picc-key&quot;</span>].asString())</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    : nullopt,</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    args[<span class="stringliteral">&quot;--dry-run&quot;</span>].asBool(),</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    args[<span class="stringliteral">&quot;--print-config&quot;</span>].asBool(),</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    args[<span class="stringliteral">&quot;--skip-picc-rekey&quot;</span>].asBool(),</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    args[<span class="stringliteral">&quot;--skip-app-rekey&quot;</span>].asBool(),</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    args[<span class="stringliteral">&quot;--delete-app-creation&quot;</span>].asBool(),</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    args[<span class="stringliteral">&quot;--skip-app-creation&quot;</span>].asBool(),</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  };</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  <span class="keywordflow">if</span> (options.dry_run) {</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    LOG_WARNING &lt;&lt; <span class="stringliteral">&quot;DRY RUN!&quot;</span>;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  }</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  <span class="keywordflow">if</span> (options.overridden_uid) {</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordtype">string</span> uid = *options.overridden_uid;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    uid.erase(<span class="keyword">remove</span>(</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;      uid.begin(),</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;      uid.end(),</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;      <span class="charliteral">&#39;:&#39;</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      ), uid.end());</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordflow">if</span> (uid.length() % 2) {</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;      errx(9, <span class="stringliteral">&quot;overridden uid should be an even number of hex characters e.g. 01020304&quot;</span>);</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    }</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keywordflow">if</span> (!all_of(uid.begin(), uid.end(), [](<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> c) {</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;      <span class="keywordflow">return</span> isxdigit(c);</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    }))</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;      errx(9, <span class="stringliteral">&quot;overridden uid should be hex characters e.g. a1B2c3D4&quot;</span>);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    LOG_WARNING &lt;&lt; <span class="stringliteral">&quot;Overridden UID: &quot;</span> &lt;&lt; uid;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    options.overridden_uid = uid;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  }</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  <span class="keywordflow">if</span> (options.overridden_picc_key) {</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keywordtype">string</span> picc_key = *options.overridden_picc_key;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    picc_key.erase(<span class="keyword">remove</span>(</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;      picc_key.begin(),</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;      picc_key.end(),</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;      <span class="charliteral">&#39;:&#39;</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;      ), picc_key.end());</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keywordflow">if</span> (32 != picc_key.length()) {</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;      errx(9, <span class="stringliteral">&quot;overridden picc key should be 32 hex characters e.g. 01020304&quot;</span>);</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    }</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keywordflow">if</span> (!all_of(picc_key.begin(), picc_key.end(), [](<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> c) {</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;      <span class="keywordflow">return</span> isxdigit(c);</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    })) {</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;      errx(9, <span class="stringliteral">&quot;overridden picc key should be 32 hex characters e.g. a1B2c3D4&quot;</span>);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    }</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    LOG_WARNING &lt;&lt; <span class="stringliteral">&quot;Overridden PICC Key: &quot;</span> &lt;&lt; picc_key;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    options.overridden_picc_key = picc_key;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;  }</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <span class="keywordflow">if</span> (options.delete_apps) {</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keywordtype">string</span> delete_apps = *options.delete_apps;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    delete_apps.erase(<span class="keyword">remove</span>(</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;      delete_apps.begin(),</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;      delete_apps.end(),</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;      <span class="charliteral">&#39;:&#39;</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;      ), delete_apps.end());</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keywordflow">if</span> (6 != delete_apps.length()) {</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;      errx(9, <span class="stringliteral">&quot;delete app should be 6 hex characters e.g. 010203&quot;</span>);</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    }</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keywordflow">if</span> (!all_of(delete_apps.begin(), delete_apps.end(), [](<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> c) {</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;      <span class="keywordflow">return</span> isxdigit(c);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    }))</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;      errx(9, <span class="stringliteral">&quot;delete app should be 6 hex characters e.g. a1B2c3&quot;</span>);</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    LOG_WARNING &lt;&lt; <span class="stringliteral">&quot;Delete apps: &quot;</span> &lt;&lt; delete_apps;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    options.delete_apps = delete_apps;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  }</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  <a class="code" href="structnfcdoorz_1_1config_1_1_config.htm">config::Config</a> config;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  <span class="keywordflow">try</span> {</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    config = config::Config::load(args);</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  } <span class="keywordflow">catch</span> (<a class="code" href="classnfcdoorz_1_1config_1_1_validation_exception.htm">config::ValidationException</a> e) {</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    LOG_ERROR</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;      &lt;&lt; e.what() &lt;&lt; endl</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;      &lt;&lt; <span class="stringliteral">&quot;Invalid config node found&quot;</span> &lt;&lt; endl;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keywordflow">return</span> 9;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  }</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  <span class="keywordflow">if</span> (args[<span class="stringliteral">&quot;--print-config&quot;</span>].asBool()) {</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    cout &lt;&lt; config &lt;&lt; endl;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  }</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;  <span class="keywordflow">if</span> (!config.apps.size()) {</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    errx(9, <span class="stringliteral">&quot;No apps in config&quot;</span>);</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  }</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;  <span class="keyword">auto</span> &amp;app = config.apps[0];</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  <a class="code" href="classnfcdoorz_1_1nfc_1_1_context.htm">nfc::Context</a> context;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;  <span class="keywordflow">if</span> (!context.init()) {</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    errx(EXIT_FAILURE, <span class="stringliteral">&quot;Unable to init libnfc (malloc)&quot;</span>);</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;  }</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;  <span class="keyword">auto</span> matched_device = context.getDeviceMatching(args[<span class="stringliteral">&quot;&lt;reader&gt;&quot;</span>].asString());</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  <span class="keywordflow">if</span> (!matched_device) {</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    errx(9, <span class="stringliteral">&quot;Could not find device.&quot;</span>);</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <span class="keywordflow">return</span> 9;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;  }</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;  <span class="keyword">auto</span> &amp;device = *matched_device;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  <span class="keywordflow">if</span> (!device.open()) {</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    errx(9, <span class="stringliteral">&quot;nfc_open() failed.&quot;</span>);</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;  }</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  <span class="keyword">auto</span> tags = device.getTags();</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;  <span class="keywordflow">if</span> (!tags.size()) {</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    errx(EXIT_FAILURE, <span class="stringliteral">&quot;Error listing tags.&quot;</span>);</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;  }</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;  LOG_INFO &lt;&lt; <span class="stringliteral">&quot;Fetched tags&quot;</span>;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;tag: tags) {</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="keywordflow">if</span> (MIFARE_DESFIRE != tag.getTagType()) {</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;      LOG_WARNING &lt;&lt; <span class="stringliteral">&quot;tag not MIFARE_DESFIRE&quot;</span>;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;      <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    }</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <a class="code" href="classnfcdoorz_1_1_adapter.htm">Adapter</a> adapter(config, tag);</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    LOG_INFO &lt;&lt; <span class="stringliteral">&quot;Found desfire tag&quot;</span>;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <span class="keywordflow">if</span> (options.overridden_uid) {</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;      adapter.setUID(*options.overridden_uid);</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    }</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <span class="keywordflow">if</span> (options.overridden_picc_key) {</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;      adapter.setOverriddenMasterKey(*options.overridden_picc_key);</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    }</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    LOG_VERBOSE &lt;&lt; <span class="stringliteral">&quot;Connecting to desfire&quot;</span>;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    CHECK_BOOL(adapter.connect(), <span class="stringliteral">&quot;Can&#39;t connect to Mifare DESFire target.&quot;</span>);</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    adapter.getUID();</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    <span class="keywordflow">if</span> (!options.skip_picc_rekey) {</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;      <span class="keywordflow">if</span> (!options.overridden_picc_key) {</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        LOG_INFO &lt;&lt; <span class="stringliteral">&quot;Authenticating with null des key&quot;</span>;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        CHECK_BOOL(adapter.authenticatePICC(null_key_des), <span class="stringliteral">&quot;Authentication on PICC failed&quot;</span>);</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        LOG_INFO &lt;&lt; <span class="stringliteral">&quot;Authenticated master application&quot;</span>;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;      } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        CHECK_BOOL(adapter.authenticatePICC(), <span class="stringliteral">&quot;Authentication on PICC with overridden key failed&quot;</span>);</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;      }</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;      <span class="keywordflow">if</span> (!options.dry_run) {</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        LOG_INFO &lt;&lt; <span class="stringliteral">&quot;Setting tag config&quot;</span>;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        CHECK_BOOL(adapter.tagInterface.set_configuration(<span class="keyword">false</span>, <span class="keyword">true</span>), <span class="stringliteral">&quot;Failed to set card config&quot;</span>);</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;      }</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    }</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    LOG_INFO &lt;&lt; <span class="stringliteral">&quot;Tag uid &quot;</span> &lt;&lt; adapter.getUIDString();</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    LOG_INFO &lt;&lt; <span class="stringliteral">&quot;Authenticating with PICC master key&quot;</span>;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    {</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;      <span class="keywordflow">if</span> (options.overridden_picc_key) {</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        LOG_INFO &lt;&lt; <span class="stringliteral">&quot;Authenticating with existing key &quot;</span>;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        CHECK_BOOL(adapter.authenticatePICC(), <span class="stringliteral">&quot;Failed to autenticate&quot;</span>);</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        LOG_INFO &lt;&lt; <span class="stringliteral">&quot;Authenticated&quot;</span>;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;      }</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;      <span class="keywordflow">if</span> (!options.skip_picc_rekey) {</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        <span class="keywordflow">if</span> (!options.dry_run) {</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;          LOG_INFO &lt;&lt; <span class="stringliteral">&quot;Setting new master key&quot;</span>;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;          visit([&amp;adapter](<span class="keyword">auto</span> &amp;key) {</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;            CHECK_BOOL(adapter.changeKey(0, key, null_key_des), <span class="stringliteral">&quot;Failed to change master key&quot;</span>);</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;            LOG_INFO &lt;&lt; <span class="stringliteral">&quot;Set new master key&quot;</span>;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;          }, config.picc.key);</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        }</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;      }</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;      LOG_INFO &lt;&lt; <span class="stringliteral">&quot;Authenticating with master key&quot;</span>;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;      visit([&amp;adapter](<span class="keyword">auto</span> &amp;key) {</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        CHECK_BOOL(adapter.authenticatePICC(key), <span class="stringliteral">&quot;Failed to auth with master key&quot;</span>);</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;      }, config.picc.key);</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    }</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    LOG_INFO &lt;&lt; <span class="stringliteral">&quot;Card contains applications:&quot;</span>;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <span class="keyword">auto</span> apps = adapter.tagInterface.get_application_ids();</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> it = apps.begin(); it != apps.end(); it++) {</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;      LOG_INFO</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        &lt;&lt; <span class="stringliteral">&quot;  - &quot;</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        &lt;&lt; setfill(<span class="charliteral">&#39;0&#39;</span>) &lt;&lt; setw(2) &lt;&lt; hex</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        &lt;&lt; (int) it-&gt;at(0) &lt;&lt; <span class="stringliteral">&quot;:&quot;</span> &lt;&lt; (int) it-&gt;at(1) &lt;&lt; <span class="stringliteral">&quot;:&quot;</span> &lt;&lt; (int) it-&gt;at(2);</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    }</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    <span class="keywordflow">if</span> (!options.skip_app_rekey) {</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;      <span class="keywordflow">if</span> (!options.dry_run) {</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        LOG_INFO &lt;&lt; <span class="stringliteral">&quot;Setting default app key&quot;</span>;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        CHECK_BOOL(adapter.tagInterface.set_default_key(null_key_aes), <span class="stringliteral">&quot;Failed to set default application key&quot;</span>);</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;      }</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    }</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    <span class="keywordflow">if</span> (options.dry_run) {</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;      <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    }</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    <span class="keywordflow">if</span> (options.delete_app_creation) {</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;      AppID_t aid = app.aid;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;      LOG_INFO &lt;&lt; <span class="stringliteral">&quot;Deleting app&quot;</span>;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;      CHECK_BOOL(adapter.deleteApplication(aid), <span class="stringliteral">&quot;Failed to delete application&quot;</span>);</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    }</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    <span class="keywordflow">if</span> (options.delete_apps) {</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;      AppID_t aid;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">char</span> *c_str = options.delete_apps-&gt;c_str();</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;      <span class="keywordflow">for</span> (uint8_t i = 0; i &lt; 6; i += 2) {</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        aid[i / 2] = (char2int(c_str[i]) &lt;&lt; 4) | char2int(c_str[i + 1]);</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;      }</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;      LOG_INFO &lt;&lt; <span class="stringliteral">&quot;Deleting app&quot;</span>;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;      CHECK_BOOL(adapter.deleteApplication(aid), <span class="stringliteral">&quot;Failed to delete application&quot;</span>);</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    }</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    <span class="keywordflow">if</span> (!options.skip_app_creation) {</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;      AppID_t aid = app.aid;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;      LOG_INFO &lt;&lt; <span class="stringliteral">&quot;Creating app&quot;</span>;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;      CHECK_BOOL(adapter.createApplication(aid, app.settings.get_lib_value(), app.keys.size()), <span class="stringliteral">&quot;Failed to create application&quot;</span>);</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    }</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <span class="keywordflow">if</span> (options.skip_app_rekey) {</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;      LOG_INFO &lt;&lt; <span class="stringliteral">&quot;Authenticating with app key&quot;</span>;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;      AppID_t aid = app.aid;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;      visit([&amp;adapter, &amp;aid](<span class="keyword">auto</span> &amp;key) {</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        CHECK_BOOL(adapter.authenticateAppByID(aid, key), <span class="stringliteral">&quot;Failed to authenticate app&quot;</span>);</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;      }, app.keys[0]);</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    }</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    <span class="keywordflow">else</span> {</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;      AppID_t aid = app.aid;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;      CHECK_BOOL(adapter.authenticateAppByID(aid, null_key_aes), <span class="stringliteral">&quot;Failed to authenticate app with default key&quot;</span>);</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;      <span class="keywordflow">for</span> (<span class="keyword">auto</span> it = app.keys.rbegin(); it != app.keys.rend(); it++) {</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;        visit([&amp;adapter, &amp;aid, it](<span class="keyword">auto</span> &amp;key) {</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;          LOG_INFO &lt;&lt; <span class="stringliteral">&quot;Key id: &quot;</span> &lt;&lt; (int) key.id;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;          LOG_INFO &lt;&lt; <span class="stringliteral">&quot;Key name: &quot;</span> &lt;&lt; key.name;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;          LOG_INFO &lt;&lt; <span class="stringliteral">&quot;Key diversify: &quot;</span> &lt;&lt; key.diversify;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;          CHECK_BOOL(adapter.changeKey(key.id, key, null_key_aes), <span class="stringliteral">&quot;Failed to change key&quot;</span>);</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        }, *it);</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;      }</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    }</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    {</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;      LOG_INFO &lt;&lt; <span class="stringliteral">&quot;Reauthenticating with app master key&quot;</span>;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;      AppID_t aid = app.aid;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;      visit([&amp;adapter, &amp;aid](<span class="keyword">auto</span> &amp;key) {</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        CHECK_BOOL(adapter.authenticateAppByID(aid, key), <span class="stringliteral">&quot;Failed to authenticate app with master key&quot;</span>);</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;      }, app.keys[0]);</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;      LOG_INFO &lt;&lt; <span class="stringliteral">&quot;Authentication okay&quot;</span>;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    }</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    <span class="comment">// Create files</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    {</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;      <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;config_file: app.files) {</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;        visit([](<span class="keyword">auto</span> &amp;file) {</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;          cout &lt;&lt; file &lt;&lt; endl;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;        }, config_file);</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        CHECK_BOOL(adapter.createFile(config_file), <span class="stringliteral">&quot;Failed to create file&quot;</span>);</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;      }</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    }</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    adapter.disconnect();</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;  }</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;  exit(error);</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;}</div><div class="ttc" id="namespacestd_htm"><div class="ttname"><a href="namespacestd.htm">std</a></div></div>
<div class="ttc" id="structnfcdoorz_1_1nfc_1_1_key_d_e_s_htm"><div class="ttname"><a href="structnfcdoorz_1_1nfc_1_1_key_d_e_s.htm">nfcdoorz::nfc::KeyDES</a></div><div class="ttdef"><b>Definition:</b> <a href="nfc_8hpp_source.htm#l00104">nfc.hpp:104</a></div></div>
<div class="ttc" id="structnfcdoorz_1_1config_1_1_config_htm"><div class="ttname"><a href="structnfcdoorz_1_1config_1_1_config.htm">nfcdoorz::config::Config</a></div><div class="ttdef"><b>Definition:</b> <a href="config_8hpp_source.htm#l00292">config.hpp:292</a></div></div>
<div class="ttc" id="classnfcdoorz_1_1nfc_1_1_context_htm"><div class="ttname"><a href="classnfcdoorz_1_1nfc_1_1_context.htm">nfcdoorz::nfc::Context</a></div><div class="ttdef"><b>Definition:</b> <a href="nfc_8hpp_source.htm#l00021">nfc.hpp:21</a></div></div>
<div class="ttc" id="classnfcdoorz_1_1config_1_1_validation_exception_htm"><div class="ttname"><a href="classnfcdoorz_1_1config_1_1_validation_exception.htm">nfcdoorz::config::ValidationException</a></div><div class="ttdef"><b>Definition:</b> <a href="config_8hpp_source.htm#l00048">config.hpp:48</a></div></div>
<div class="ttc" id="classnfcdoorz_1_1_adapter_htm"><div class="ttname"><a href="classnfcdoorz_1_1_adapter.htm">nfcdoorz::Adapter</a></div><div class="ttdef"><b>Definition:</b> <a href="adapter_8hpp_source.htm#l00012">adapter.hpp:12</a></div></div>
<div class="ttc" id="structnfcdoorz_1_1nfc_1_1_key_a_e_s_htm"><div class="ttname"><a href="structnfcdoorz_1_1nfc_1_1_key_a_e_s.htm">nfcdoorz::nfc::KeyAES</a></div><div class="ttdef"><b>Definition:</b> <a href="nfc_8hpp_source.htm#l00159">nfc.hpp:159</a></div></div>
<div class="ttc" id="namespacenfcdoorz_htm"><div class="ttname"><a href="namespacenfcdoorz.htm">nfcdoorz</a></div><div class="ttdef"><b>Definition:</b> <a href="adapter_8cpp_source.htm#l00007">adapter.cpp:7</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_9654b8d08f4bba4e84b362c5fd320bee.htm">apps</a></li><li class="navelem"><b>nfcdoorz-preconfig.cpp</b></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
