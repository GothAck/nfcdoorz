<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>NFC Doorz: lib/ipc/ipc.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">NFC Doorz
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('ipc_8cpp_source.htm','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ipc.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#include &quot;ipc.hpp&quot;</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacenfcdoorz_1_1ipc.htm">nfcdoorz::ipc</a> {</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;  <span class="keyword">using namespace </span><a class="code" href="namespacestd.htm">std</a>;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;  <span class="keyword">using namespace </span><a class="code" href="namespacenfcdoorz.htm">nfcdoorz</a>;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno"><a class="line" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm#a0ab232960400fefb1bcfa9c72a285329">    7</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm#a0ab232960400fefb1bcfa9c72a285329">IpcBase::open</a>(<span class="keywordtype">int</span> fd) {</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;    pipe-&gt;open(fd);</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;  }</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno"><a class="line" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm#acaed0b79cc0ea79052a21b583b79bfb6">   11</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm#acaed0b79cc0ea79052a21b583b79bfb6">IpcBase::run</a>() {</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;    idle-&gt;on&lt;uvw::ErrorEvent&gt;([<span class="keyword">this</span>](uvw::ErrorEvent &amp;e, uvw::IdleHandle &amp;) {</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;      LOG_ERROR &lt;&lt; <span class="stringliteral">&quot;IdleHandle ErrorEvent&quot;</span>;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;    });</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    idle-&gt;on&lt;uvw::IdleEvent&gt;([<span class="keyword">this</span>](uvw::IdleEvent &amp;, uvw::IdleHandle &amp;) {</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;      <span class="keyword">auto</span> it = idle_calls.begin();</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;      <span class="keywordflow">while</span> (it != idle_calls.end()) {</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;        <span class="keyword">auto</span> result = (*it)-&gt;runWithTimeout();</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;        <span class="keywordflow">if</span> (result) {</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;          it = idle_calls.erase(it);</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;        }</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;        <span class="keywordflow">else</span> {</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;          it++;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;        }</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;      }</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    });</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    idle-&gt;init();</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    idle-&gt;start();</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    loop-&gt;run();</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  }</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  <span class="keywordtype">void</span> IpcBase::registerIdleCall(shared_ptr&lt;Executable&gt; exec) {</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    idle_calls.push_back(exec);</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  }</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="structnfcdoorz_1_1ipc_1_1_ipc_base_1_1_executable.htm#a28fa1bcf8d085745e3b17d50f8f2c34b">   36</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="structnfcdoorz_1_1ipc_1_1_ipc_base_1_1_executable.htm#a28fa1bcf8d085745e3b17d50f8f2c34b">IpcBase::Executable::setTimeout</a>(uint32_t new_timeout) {</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    timeout = new_timeout;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  }</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  <span class="keywordtype">bool</span> IpcBase::Executable::runWithTimeout() {</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keywordflow">if</span> (</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;      timeout &gt; 0 &amp;&amp;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;      std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        std::chrono::system_clock::now() - start</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        ).count() &gt;= timeout</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;      ) {</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;      LOG_ERROR &lt;&lt; <span class="stringliteral">&quot;Idle Executable timed out&quot;</span>;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    }</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordflow">return</span> run();</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  }</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="structnfcdoorz_1_1ipc_1_1_ipc_base_1_1_executable.htm#a5a798183762f56f6a63247b6408afe13">   53</a></span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="structnfcdoorz_1_1ipc_1_1_ipc_base_1_1_executable.htm#a5a798183762f56f6a63247b6408afe13">IpcBase::Executable::run</a>() {</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  }</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  optional&lt;pair&lt;PipePtr, PipePtr&gt;&gt; IpcBase::socketpair() {</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordtype">int</span> unixSockets[2];</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordflow">if</span> (::socketpair(AF_UNIX, SOCK_STREAM, 0, unixSockets) == -1) {</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;      <span class="keywordflow">return</span> nullopt;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    }</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keyword">auto</span> pipeHandles = pair(</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;      loop-&gt;resource&lt;uvw::PipeHandle&gt;(),</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;      loop-&gt;resource&lt;uvw::PipeHandle&gt;()</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;      );</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    get&lt;0&gt;(pipeHandles)-&gt;init();</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    get&lt;0&gt;(pipeHandles)-&gt;open(unixSockets[0]);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    get&lt;1&gt;(pipeHandles)-&gt;init();</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    get&lt;1&gt;(pipeHandles)-&gt;open(unixSockets[1]);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordflow">return</span> pipeHandles;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  }</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;}</div><div class="ttc" id="namespacestd_htm"><div class="ttname"><a href="namespacestd.htm">std</a></div></div>
<div class="ttc" id="namespacenfcdoorz_1_1ipc_htm"><div class="ttname"><a href="namespacenfcdoorz_1_1ipc.htm">nfcdoorz::ipc</a></div><div class="ttdef"><b>Definition:</b> <a href="api_8hpp_source.htm#l00005">api.hpp:5</a></div></div>
<div class="ttc" id="structnfcdoorz_1_1ipc_1_1_ipc_base_1_1_executable_htm_a5a798183762f56f6a63247b6408afe13"><div class="ttname"><a href="structnfcdoorz_1_1ipc_1_1_ipc_base_1_1_executable.htm#a5a798183762f56f6a63247b6408afe13">nfcdoorz::ipc::IpcBase::Executable::run</a></div><div class="ttdeci">virtual bool run()</div><div class="ttdoc">Override this method. </div><div class="ttdef"><b>Definition:</b> <a href="ipc_8cpp_source.htm#l00053">ipc.cpp:53</a></div></div>
<div class="ttc" id="structnfcdoorz_1_1ipc_1_1_ipc_base_1_1_executable_htm_a28fa1bcf8d085745e3b17d50f8f2c34b"><div class="ttname"><a href="structnfcdoorz_1_1ipc_1_1_ipc_base_1_1_executable.htm#a28fa1bcf8d085745e3b17d50f8f2c34b">nfcdoorz::ipc::IpcBase::Executable::setTimeout</a></div><div class="ttdeci">virtual void setTimeout(uint32_t) final</div><div class="ttdoc">Set callback timeout. Override default timeout of this Executable. </div><div class="ttdef"><b>Definition:</b> <a href="ipc_8cpp_source.htm#l00036">ipc.cpp:36</a></div></div>
<div class="ttc" id="classnfcdoorz_1_1ipc_1_1_ipc_base_htm_acaed0b79cc0ea79052a21b583b79bfb6"><div class="ttname"><a href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm#acaed0b79cc0ea79052a21b583b79bfb6">nfcdoorz::ipc::IpcBase::run</a></div><div class="ttdeci">void run()</div><div class="ttdoc">Start event loop. This does not return, see UVW/libuv docs. </div><div class="ttdef"><b>Definition:</b> <a href="ipc_8cpp_source.htm#l00011">ipc.cpp:11</a></div></div>
<div class="ttc" id="classnfcdoorz_1_1ipc_1_1_ipc_base_htm_a0ab232960400fefb1bcfa9c72a285329"><div class="ttname"><a href="classnfcdoorz_1_1ipc_1_1_ipc_base.htm#a0ab232960400fefb1bcfa9c72a285329">nfcdoorz::ipc::IpcBase::open</a></div><div class="ttdeci">void open(int fd)</div><div class="ttdoc">Open a file descriptor. As libuv pipe does not support abstract socket opening, we DIY...</div><div class="ttdef"><b>Definition:</b> <a href="ipc_8cpp_source.htm#l00007">ipc.cpp:7</a></div></div>
<div class="ttc" id="namespacenfcdoorz_htm"><div class="ttname"><a href="namespacenfcdoorz.htm">nfcdoorz</a></div><div class="ttdef"><b>Definition:</b> <a href="adapter_8cpp_source.htm#l00007">adapter.cpp:7</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_97aefd0d527b934f1d99a682da8fe6a9.htm">lib</a></li><li class="navelem"><a class="el" href="dir_eea5a30af1860202cf994ad4b8d0af6a.htm">ipc</a></li><li class="navelem"><b>ipc.cpp</b></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
