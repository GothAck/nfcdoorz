<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>NFC Doorz: old/auth.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">NFC Doorz
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('old_2auth_8cpp_source.htm','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">auth.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#include &lt;err.h&gt;</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#include &lt;inttypes.h&gt;</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;signal.h&gt;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;stddef.h&gt;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;stdlib.h&gt;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;string.h&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;nfc/nfc.h&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;nfc/nfc-types.h&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;freefare.h&gt;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;yaml-cpp/yaml.h&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &quot;nfc-utils.h&quot;</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#define MAX_DEVICE_COUNT 16</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">static</span> nfc_device *pnd = NULL;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">static</span> nfc_context *context;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">static</span> <span class="keywordtype">void</span> stop_polling(<span class="keywordtype">int</span> sig) {</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  (void) sig;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  <span class="keywordflow">if</span> (pnd != NULL) {</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    nfc_abort_command(pnd);</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  }</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  <span class="keywordflow">else</span> {</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    nfc_exit(context);</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    exit(EXIT_FAILURE);</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  }</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;}</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">static</span> <span class="keywordtype">void</span> print_usage(<span class="keyword">const</span> <span class="keywordtype">char</span> *progname) {</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  printf(<span class="stringliteral">&quot;usage: %s [-v]\n&quot;</span>, progname);</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  printf(<span class="stringliteral">&quot;  -v\t verbose display\n&quot;</span>);</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;}</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keywordtype">void</span> desfire(FreefareTag &amp;tag);</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keywordtype">int</span> main(<span class="keywordtype">int</span> argc, <span class="keyword">const</span> <span class="keywordtype">char</span> *argv[]) {</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  <span class="keywordtype">bool</span> verbose = <span class="keyword">false</span>;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  signal(SIGINT, stop_polling);</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  <span class="comment">// Display libnfc version</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span> *acLibnfcVersion = nfc_version();</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  printf(<span class="stringliteral">&quot;%s uses libnfc %s\n&quot;</span>, argv[0], acLibnfcVersion);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  <span class="keywordflow">if</span> (argc != 1) {</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">if</span> ((argc == 2) &amp;&amp; (0 == strcmp(<span class="stringliteral">&quot;-v&quot;</span>, argv[1]))) {</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;      verbose = <span class="keyword">true</span>;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;      print_usage(argv[0]);</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;      exit(EXIT_FAILURE);</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    }</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  }</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  YAML::Node config = YAML::LoadFile(<span class="stringliteral">&quot;config.yaml&quot;</span>);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  <span class="keyword">const</span> uint8_t uiPollNr = 255;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  <span class="keyword">const</span> uint8_t uiPeriod = 1;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  <span class="keyword">const</span> nfc_modulation nmModulations[] = {</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    { .nmt = NMT_ISO14443A, .nbr = NBR_106 },</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    { .nmt = NMT_ISO14443B, .nbr = NBR_106 },</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  };</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">size_t</span> szModulations = <span class="keyword">sizeof</span>(nmModulations) / <span class="keyword">sizeof</span>(nfc_modulation);</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  nfc_target nt;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  <span class="keywordtype">int</span> res = 0;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  nfc_init(&amp;context);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  <span class="keywordflow">if</span> (context == NULL) {</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    ERR(<span class="stringliteral">&quot;Unable to init libnfc (malloc)&quot;</span>);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    exit(EXIT_FAILURE);</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  }</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  pnd = nfc_open(context, NULL);</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  <span class="keywordflow">if</span> (pnd == NULL) {</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    ERR(<span class="stringliteral">&quot;%s&quot;</span>, <span class="stringliteral">&quot;Unable to open NFC device.&quot;</span>);</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    nfc_exit(context);</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    exit(EXIT_FAILURE);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  }</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  <span class="keywordflow">if</span> (nfc_initiator_init(pnd) &lt; 0) {</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    nfc_perror(pnd, <span class="stringliteral">&quot;nfc_initiator_init&quot;</span>);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    nfc_close(pnd);</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    nfc_exit(context);</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    exit(EXIT_FAILURE);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  }</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  printf(<span class="stringliteral">&quot;NFC reader: %s opened\n&quot;</span>, nfc_device_get_name(pnd));</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  <span class="keywordflow">while</span> (1) {</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    printf(<span class="stringliteral">&quot;NFC device will poll during %ld ms (%u pollings of %lu ms for %&quot;</span> PRIdPTR <span class="stringliteral">&quot; modulations)\n&quot;</span>, (<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span>) uiPollNr * szModulations * uiPeriod * 150, uiPollNr, (<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span>) uiPeriod * 150, szModulations);</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordflow">if</span> ((res = nfc_initiator_poll_target(pnd, nmModulations, szModulations, uiPollNr, uiPeriod, &amp;nt)) &lt; 0) {</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;      nfc_perror(pnd, <span class="stringliteral">&quot;nfc_initiator_poll_target&quot;</span>);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;      nfc_close(pnd);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;      nfc_exit(context);</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;      exit(EXIT_FAILURE);</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    }</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordflow">if</span> (res &gt; 0) {</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;      printf(<span class="stringliteral">&quot;Tag found\n&quot;</span>);</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;      print_nfc_target(&amp;nt, verbose);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;      <span class="comment">// FreefareTag t = freefare_tag_new(pnd, nt);</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      <span class="comment">// printf(&quot;Freefare tag %s\n&quot;, freefare_get_tag_friendly_name(t));</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;      <span class="comment">// if (freefare_get_tag_type(t) == MIFARE_DESFIRE) {</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;      <span class="comment">// desfire(t);</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;      <span class="comment">// }</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;      printf(<span class="stringliteral">&quot;Waiting for card removing...&quot;</span>);</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;      fflush(stdout);</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;      <span class="keywordflow">while</span> (0 == nfc_initiator_target_is_present(pnd, NULL)) {}</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;      <span class="comment">// freefare_free_tag(t);</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;      nfc_perror(pnd, <span class="stringliteral">&quot;nfc_initiator_target_is_present&quot;</span>);</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;      printf(<span class="stringliteral">&quot;done.\n&quot;</span>);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;      printf(<span class="stringliteral">&quot;No target found.\n&quot;</span>);</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    }</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  }</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  nfc_close(pnd);</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  nfc_exit(context);</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  exit(EXIT_SUCCESS);</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;}</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="keywordtype">void</span> desfire(FreefareTag &amp;t) {</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  <span class="keywordflow">if</span> (mifare_desfire_connect(t) &lt; 0) {</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keywordflow">return</span>;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  }</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  <span class="keyword">struct </span>mifare_desfire_version_info info;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  <span class="keywordflow">if</span> (mifare_desfire_get_version(t, &amp;info) &lt; 0) {</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordflow">return</span>;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  }</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  <span class="keywordflow">if</span> (info.software.version_major &lt; 1) {</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    warnx(<span class="stringliteral">&quot;Found old DESFire, skipping&quot;</span>);</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordflow">return</span>;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  }</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;}</div></div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_be9243ea0451cb7b4349af58d070258e.htm">old</a></li><li class="navelem"><b>auth.cpp</b></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
