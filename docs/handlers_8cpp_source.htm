<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>NFC Doorz: lib/apps/api/handlers.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">NFC Doorz
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('handlers_8cpp_source.htm','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">handlers.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#include &lt;termios.h&gt;</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#include &lt;unistd.h&gt;</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;pty.h&gt;</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;seasocks/ResponseBuilder.h&gt;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;seasocks/ResponseCode.h&gt;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;nlohmann/json.hpp&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;lib/apps/api/handlers.hpp&quot;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &quot;lib/ipc/api.hpp&quot;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keywordtype">void</span> set_raw(<span class="keywordtype">int</span> fd) {</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;  <span class="keyword">struct </span>termios orig_termios;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  <span class="keywordflow">if</span> (tcgetattr(fd, &amp;orig_termios) &lt; 0) {</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    LOG_ERROR &lt;&lt; <span class="stringliteral">&quot;Failed to get termios&quot;</span>;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  }</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;  cfmakeraw(&amp;orig_termios);</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  <span class="keywordflow">if</span> (tcsetattr(fd, TCSANOW, &amp;orig_termios) &lt; 0) {</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    LOG_ERROR &lt;&lt; <span class="stringliteral">&quot;Failed to set termios&quot;</span>;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  }</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;}</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacenfcdoorz_1_1apps_1_1api.htm">nfcdoorz::apps::api</a> {</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  <span class="keyword">using</span> json = nlohmann::json;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  <span class="keyword">using namespace </span><a class="code" href="namespaceseasocks.htm">seasocks</a>;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  <span class="keyword">using namespace </span><a class="code" href="namespacestd.htm">std</a>;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  <span class="keyword">using namespace </span><a class="code" href="namespacenfcdoorz.htm">nfcdoorz</a>;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  std::shared_ptr&lt;Response&gt; MyPageHandler::status(<span class="keyword">const</span> Request &amp;request) {</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keyword">auto</span> res = client.getStatusCall().gen();</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="keyword">auto</span> reply = res.get();</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    json obj;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    json processes;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;p: reply-&gt;processes) {</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;      json proc;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;      proc[<span class="stringliteral">&quot;pid&quot;</span>] = p-&gt;pid;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;      proc[<span class="stringliteral">&quot;name&quot;</span>] = p-&gt;name;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;      proc[<span class="stringliteral">&quot;args&quot;</span>] = p-&gt;args;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;      processes.push_back(proc);</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    }</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    obj[<span class="stringliteral">&quot;processes&quot;</span>] = processes;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keywordflow">return</span> Response::jsonResponse(obj.dump());</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  }</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  std::shared_ptr&lt;Response&gt; MyPageHandler::tty(<span class="keyword">const</span> Request &amp;request) {</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="comment">// if (!request.hasHeader(&quot;DeviceID&quot;)) {</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="comment">// return Response::error(ResponseCode::Unauthorized, &quot;Unauthorized&quot;);</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="comment">// }</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordflow">return</span> Response::unhandled();</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  }</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  std::shared_ptr&lt;Response&gt; MyPageHandler::handle(<span class="keyword">const</span> Request &amp;request) {</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="comment">// if (request.verb() != Request::Verb::Get)</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="comment">// return Response::unhandled();</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordflow">if</span> (request.getRequestUri() == <span class="stringliteral">&quot;/status&quot;</span>) {</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;      <span class="keywordflow">return</span> status(request);</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    }</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keywordflow">if</span> (request.getRequestUri() == <span class="stringliteral">&quot;/tty&quot;</span>) {</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;      <span class="keywordflow">return</span> tty(request);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    }</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordflow">return</span> Response::unhandled();</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  }</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  <span class="keywordtype">void</span> TtySockHandler::onConnect(WebSocket *socket) {</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordtype">string</span> devID = <span class="stringliteral">&quot;yes&quot;</span>;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    connections[devID] = socket;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordtype">int</span> master, slave;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordtype">char</span> name[128];</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    memset(name, 0, 128);</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    openpty(&amp;master, &amp;slave, <span class="keyword">nullptr</span>, <span class="keyword">nullptr</span>, <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    set_raw(master);</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    set_raw(slave);</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    ttyname_r(slave, name, 127);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    close(slave);</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keyword">auto</span> ours = client.loop-&gt;resource&lt;uvw::PollHandle&gt;(master);</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    ours-&gt;init();</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    ours-&gt;start(uvw::Flags&lt;uvw::PollHandle::Event&gt;::from&lt;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;      uvw::PollHandle::Event::READABLE,</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      uvw::PollHandle::Event::DISCONNECT</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;      &gt;());</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    fds[devID] = master;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    handles[devID] = ours;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    ours-&gt;on&lt;uvw::ErrorEvent&gt;([](<span class="keyword">const</span> uvw::ErrorEvent &amp;e, uvw::PollHandle &amp;) {</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;      LOG_ERROR &lt;&lt; e.what();</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    });</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    ours-&gt;on&lt;uvw::PollEvent&gt;([<span class="keyword">this</span>, devID, socket, master](<span class="keyword">const</span> uvw::PollEvent &amp;ev, uvw::PollHandle &amp;pipe) {</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;      <span class="keywordflow">if</span> (ev.flags &amp; uvw::PollHandle::Event::READABLE) {</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="keywordtype">char</span> *data = <span class="keyword">new</span> <span class="keywordtype">char</span>[256];</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="keyword">auto</span> len = read(master, data, 255);</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <span class="keywordflow">if</span> (len &lt;= 0) {</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;          <span class="keywordflow">return</span>;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        }</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        data[len] = 0;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <span class="keyword">auto</span> run = make_shared&lt;Runnable&gt;(socket, data, len);</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        server.execute(run);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;      }</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;      <span class="keywordflow">if</span> (ev.flags &amp; uvw::PollHandle::Event::DISCONNECT) {</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        closeOut(devID);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;      }</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    });</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    client.registerEventHandler(</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;      ipc::api::Events::AuthenticatorExitEvent,</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;      [<span class="keyword">this</span>, devID](<span class="keyword">auto</span> &amp;event) -&gt; <span class="keywordtype">bool</span> {</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;      <span class="keyword">auto</span> exitEvent = <span class="keyword">event</span>.AsAuthenticatorExitEvent();</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;      <span class="keywordflow">if</span> (exitEvent-&gt;deviceID == devID) {</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        closeOut(devID);</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;      }</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    });</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keyword">auto</span> res = client.getCreateAuthenticatorCall(name, devID).gen();</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keyword">auto</span> reply = res.get();</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keywordflow">if</span> (!reply-&gt;status) {</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;      LOG_ERROR &lt;&lt; <span class="stringliteral">&quot;Failed to create authenticator&quot;</span>;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;      socket-&gt;close();</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;      ours-&gt;close();</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;      close(master);</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;      LOG_DEBUG &lt;&lt; <span class="stringliteral">&quot;Authenticator created&quot;</span>;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    }</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  }</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  <span class="keywordtype">void</span> TtySockHandler::onData(WebSocket *socket, <span class="keyword">const</span> uint8_t *data, <span class="keywordtype">size_t</span> length) {</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keywordtype">string</span> devID = <span class="stringliteral">&quot;yes&quot;</span>; <span class="comment">// socket-&gt;getHeader(&quot;DeviceID&quot;);</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keyword">auto</span> fd = fds.at(devID);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keywordtype">size_t</span> i = 0;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keywordflow">while</span> (i &lt; length) {</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;      i += write(fd, data + i, length - i);</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    }</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  }</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  <span class="keywordtype">void</span> TtySockHandler::onDisconnect(WebSocket *socket) {</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    LOG_DEBUG &lt;&lt; <span class="stringliteral">&quot;Disconnect&quot;</span>;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keywordtype">string</span> devID = <span class="stringliteral">&quot;yes&quot;</span>; <span class="comment">// socket-&gt;getHeader(&quot;DeviceID&quot;);</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    closeOut(devID);</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  }</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  <span class="keywordtype">void</span> TtySockHandler::closeOut(std::string devID) {</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    std::lock_guard&lt;std::mutex&gt; lock(close_mutex);</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    LOG_DEBUG &lt;&lt; <span class="stringliteral">&quot;Close out&quot;</span>;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keywordflow">if</span> (connections.count(devID)) {</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;      server.execute([connection = connections[devID]]() {</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        connection-&gt;close();</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;      });</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;      connections.erase(devID);</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    }</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="keywordflow">if</span> (handles.count(devID)) {</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;      handles[devID]-&gt;close();</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;      handles.erase(devID);</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    }</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="keywordflow">if</span> (fds.count(devID)) {</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;      close(fds[devID]);</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;      fds.erase(devID);</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    }</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  }</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;}</div><div class="ttc" id="namespacestd_htm"><div class="ttname"><a href="namespacestd.htm">std</a></div></div>
<div class="ttc" id="namespacenfcdoorz_1_1apps_1_1api_htm"><div class="ttname"><a href="namespacenfcdoorz_1_1apps_1_1api.htm">nfcdoorz::apps::api</a></div><div class="ttdef"><b>Definition:</b> <a href="handlers_8cpp_source.htm#l00023">handlers.cpp:23</a></div></div>
<div class="ttc" id="namespaceseasocks_htm"><div class="ttname"><a href="namespaceseasocks.htm">seasocks</a></div><div class="ttdef"><b>Definition:</b> <a href="seasocks-plog_8hpp_source.htm#l00008">seasocks-plog.hpp:8</a></div></div>
<div class="ttc" id="namespacenfcdoorz_htm"><div class="ttname"><a href="namespacenfcdoorz.htm">nfcdoorz</a></div><div class="ttdef"><b>Definition:</b> <a href="adapter_8cpp_source.htm#l00007">adapter.cpp:7</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_97aefd0d527b934f1d99a682da8fe6a9.htm">lib</a></li><li class="navelem"><a class="el" href="dir_3b9919df4a807d4b688612dce4e942a3.htm">apps</a></li><li class="navelem"><a class="el" href="dir_bf748a4ed17e892abd657bdfd884aa74.htm">api</a></li><li class="navelem"><b>handlers.cpp</b></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
